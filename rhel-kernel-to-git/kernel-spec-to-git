#!/usr/bin/perl -w
use strict;
use warnings;
use Getopt::Long;
use POSIX qw( EXIT_SUCCESS EXIT_FAILURE );

use strict;

my $srcdir = "..";
my $specfile;
my @order = ();
my %file = ();
my %opts = ();

my $rc = GetOptions(
        'src=s'      => \$srcdir,
        'spec=s'     => \$specfile,
);
die "Invalid options specified.\n" if !$rc;

length($specfile) or die "Use $0 --spec <specfile>.\n";
open(IN,"$specfile") or die "Couldn't open $specfile\n";
while (<IN>) {
        if (m/^Patch([0-9]+): (\S*)\s*$/) {
                push @order, $1;
                $file{$1} = $2;
        }

        if (m/^%patch([0-9]+) (.*\S)\s*$/) {
                $opts{$1} = $2;
        }
}
close(IN);
printf STDERR "Read %u patches.\n", $#order+1;

foreach my $n (@order) {
        my $f = $file{$n};
        my $o = $opts{$n};
        print "$n $o $f\n";

        next if not defined $f;
        next if not defined $o;

        my $p = "$srcdir/$f";
        -f $p or die "there is no $p\n";

        my $cat = "cat";
        $cat = "bunzip2 -c" if $f =~ /bz2$/;
        $cat = "gunzip -c" if $f =~ /gz$/;

        system ("$cat $p | patch -s $o")
        && die "failed to apply $n\n";

        system ("git add -u")
        && die "failed to add $n\n";

        my $do = $o;
        $do =~ s/-R//;
        
        system ("$cat $p | diffstat -l $do | sed -e 's,^/,,' | xargs git add");

        my $empty = "";
        my $cnt = `$cat $p | diffstat -l $do | wc -l`;
        $empty = "--allow-empty" if $cnt < 1;

        system ("git commit $empty -m'$f'")
        && die "failed to commit $n\n";
}


